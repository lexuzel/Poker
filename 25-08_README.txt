**Контент папки PROJECT

1. Додав рішення KNNonContourFeatures.

   Це матчер на основі KNN (K-Nearest Neighbors). 

   У якості фіч використовуються характеристики контура. 

   Деталі в .cpp у вигляді коментарів.

2. До рішення також додав директорії із зображеннями { images, trainset, img_predict }.

   Це зроблено для того, щоб швидко перевірити роботу програми, і не шукати зображення самому.



**Результати роботи програми

З матчінгом мастей результати обнадійливі: 21/21 на моїх зображеннях (8 зображень максимально наближені до реальної ситуації)

Для рангів картина наступна. Якщо задавати сітці 13 класів (всі ранги), то її точність 40/56 (71.5%)



**Постановка задачі

(не змінилось) Детектувати декілька (1-5+) карт, що лежать на "помірно освітленій" підложці і не пересікаються між собою.

Від складніших випадків поки абстрагуємось.



Якщо детальніше, то ось, що у нас є:

 + задовільний препроцесінг фотографії (дозволяє виявляти карти при невибагливих умовах)

 + виділення контурів карт (змінна кількість) та опроксимація прямокутником. Точність задовільна (похибка не впливає критично на наступні етапи).

 + перспективне перетворення карт. Відхилень від норми не помічено.

-+ матчінг в процесі. Задача першого пріорітету.

 + знаходження комбінацій карт. Відхилень від норми не помічено.



Тепер чого у нас немає:

 - презентабельність програми. Вивід зображення з усією потрібною інформацією (контури карт, підписи до них, назва комбінації) на ньому.

+- адаптація програми до потокового відео, можливість отримання потоку з веб-камери в реальному часі. (Щось подібне у Саші я вже бачив)

 - презентація проекту.



**Моя поточна задача

Модифікую матчер для кращого розпізнавання рангів.